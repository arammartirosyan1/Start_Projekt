{
  "footer": {
    "text": "Կայքը նախատեսված է հայերեն լեզվով տարբեր ծրագրավորման լեզուներ անվճար սովորելու համար։"
  },
  "python-intro": {
    "title1": "Ի՞նչ է Python-ը",
    "text1": "Python-ը հայտնի ծրագրավորման լեզու է: Այն ստեղծվել է Գվիդո վան Ռոսումի կողմից և թողարկվել 1991 թվականին։<br><ul><li>Python-ը բարձր մակարդակի, բաց կոդով ծրագրավորման լեզու է, որը հայտնի է իր պարզությամբ և ընթեռնելիությամբ:</li><li>Այն կարող է օգտագործվել բազմաթիվ բնագավառներում, այդ թվում՝ տվյալների վերլուծություն, կայքերի մշակման, արհեստական բանականության և մեքենայական ուսուցման, ավտոմատացման և այլնի համար:</li></ul>",
    "title2": "Ի՞նչ կարող է անել Python-ը:",
    "text2": "<ul><li>Python-ը կարող է օգտագործվել սերվերի վրա՝ վեբ հավելվածներ ստեղծելու համար:</li><li>Python-ը կարող է աշխատել տվյալների բազայի հետ:</li><li>Python-ը կարող է կարդալ և գրել ցանկացած տիպի ֆայլում:</li><li>Python-ը կարող է օգտագործվել մեծ տվյալների մշակման և բարդ մաթեմատիկա կատարելու համար:</li><li>Python-ը կարող է օգտագործվել աշխատանքը ավտոմատացնելու համար:</li></ul>",
"title3": "Ինչու՞ Python:",
    "text3": "<ul><li>Python-ն աշխատում է տարբեր հարթակներում (Windows, Mac, Linux, Raspberry Pi և այլն):</li><li>Python-ն ունի պարզ շարահյուսություն, որը նման է անգլերենին:</li><li>Python-ն ունի շարահյուսություն, որը թույլ է տալիս ծրագրավորողներին գրել ավելի քիչ տողերով ծրագրեր, քան որոշ այլ ծրագրավորման լեզուներ:</li></ul>",
 "title4": "Ի՞նչ աշխատանքի կարելի է անցնել Python-ի իմացությամբ",
 "text4": "<ul><li>Վեբ ծրագրավորող (Web Developer)</li><li>Տվյալների վերլուծաբան (Data Analyst)</li><li>Մեքենայական ուսուցման ինժեներ (Machine Learning Engineer)</li><li>Տվյալագիտության մասնագետ (Data Scientist)</li><li>Ավտոմատացման ինժեներ (Automation Engineer)</li></ul>"
 },
  "python-install": {
    "title1": "Python-ի տեղադրում (installation)",
    "text1": "Շատ համակարգիչներում արդեն տեղադրված կլինի python-ը: <br>Ստուգելու համար, թե արդյոք ունեք python-ը տեղադրված համակարգչի վրա, տերմինալում մուտքագրեք հետևյալ հրամանը <br><b>python --version</b><br>",
    "title2": "",
    "text2": "Եթե ​​գտնում եք, որ ձեր համակարգչում Python-ը տեղադրված չէ, ապա այն կարող եք անվճար ներբեռնել հետևյալ կայքից՝<b> https://www.python.org/</b><br><br>",
    "title3": "Python-ի գործարկում",
    "text3": "Python կոդը աշխատացնելու համար անհրաժեշտ է՝ կոդը գրել python(.py) ֆայլի մեջ, վերջինիս հասցեն գրելով python տերմինալում <br> <b>C:/Users/Your Name>python helloworld.py</b><br>Որտեղ «helloworld.py»-ը ձեր python ֆայլի անունն է:<br><br>",
    "title4": "Python հրամանի տող",
    "text4": "Python-ում փոքր կոդեր փորձարկելու համար ավելի արագ և հեշտ է կոդը չգրել ֆայլում այլ Python տերմինալի միջոցով կարող եք աշխատացնել կոդը,<br>Windows, Mac կամ Linux հրամանի տողում մուտքագրեք հետևյալը.<br>C:/Users/Your Name>python կամ C:/Users/Your Name>py <br>պայմանավորված python-ի տարբերակից<br>Գրեք հետևյալ կոդը<br><b> >>> print('Hello, World!') </b>"
  },
  "python-variables": {
    "title1": "Python-ի փոփոխականներ (ariables)",
    "text1": "Փոփոխականները կոնտեյներներ են տվյալների արժեքները պահելու համար:<br><br>Python-ը փոփոխական ստեղծելու հրաման չունի,<br>փոփոխականը ստեղծվում է այն պահին, երբ դուք առաջին անգամ դրան արժեք եք հատկացնում:<br><br>Օրինակ՝ <br> <b>x = 5 <br>y = 'Արմեն' <br>print(x) <br>print(y)<br></b>",
    "title2": "Փոփոխական տեսակներ",
    "text2": "Եթե ​​ցանկանում եք նշել փոփոխականի տվյալների տեսակը, դա արվում է տվյալ ձևով <br><b>x = str(3)<br>y = int(3)<br>z = float(3)</b><br><br> Դուք կարող եք կատարել հակառակ գործողությունը՝ ստանալ փոփոխականի տվյալների տեսակը <b>type()</b> ֆունկցիայի միջոցով:<br><b>x = 5 <br>y = 'Արմեն' <br>print(type(x)) <br>print(type(y))<br></b>",
    "title3": "Փոփոխական անուններ",
    "text3": "Փոփոխականը կարող է ունենալ կարճ անուն (ինչպես x և y) կամ ավելի նկարագրական անուն (տարիք, անուն, ընդհանուր_ծավալ):<br><br><b>Python փոփոխականների կանոններ.</b><ul><li>Փոփոխական անունը պետք է սկսվի տառով կամ ընդգծված նիշով</li><li>Փոփոխական անունը չի կարող սկսվել թվով</li><li>Փոփոխական անունը կարող է պարունակել միայն ալֆա-թվային նիշեր և ընդգծումներ (A-z, 0-9 և _ )</li><li>Փոփոխականների անունները մեծատառերի նկատմամբ զգայուն են (տարիքը, Տարիքը և AGE-ը երեք տարբեր փոփոխականներ են)</li><li>Փոփոխական անունը չի կարող լինել Python հիմնաբառերից որևէ մեկը:</li></ul>",
    "title4": "Շատ արժեք ունեցող փոփոխականներ",
    "text4": "Python-ը թույլ է տալիս արժեքներ վերագրել մի քանի փոփոխականների մեկ տողում.<br>Օրինակ՝ <br> x, y, z = 'Նարինջ', 'Բանան', 'Խնձոր'<br><br>Եվ դուք կարող եք նույն արժեքը վերագրել մի շարք փոփոխականների մեկ տողում.<br> x = y = z = 'Նարինջ'"
  },
  "python-datatype": {
    "title1": "Python տվյալների տեսակները (data type)",
    "text1": "Ծրագրավորման մեջ տվյալների տեսակը կարևոր հասկացություն է:<br><br>Փոփոխականները կարող են լինել տարբեր տեսակի, ամեն տեսակ առանձնահատուկ է իր ֆունկցիոնալությամբ:<br><br>",
    "title2": "Python-ն ունի տվյալների հետևյալ տեսակները՝<br><br>",
    "text2": "Տեքստի տեսակ - <span style=\"color:red;\"><b>str</b></span><br><br>Թվային տեսակներ - <span style=\"color:red;\"><b>int, float, complex</b></span><br><br>Հերթականության տեսակներ - <span style=\"color:red;\"><b>list, tuple, range</b></span><br><br>Քարտեզագրման տեսակ - <span style=\"color:red;\"><b>dict</b></span><br><br>Կոմպլեկտի տեսակներ - <span style=\"color:red;\"><b>set, frozenset</b></span><br><br>Բուլյան տեսակ - <span style=\"color:red;\"><b>bool</b></span><br><br>Երկուական տեսակներ - <span style=\"color:red;\"><b>bytes, bytearray, memoryview</b></span><br><br>Ոչ Տեսակ - <span style=\"color:red;\"><b>NoneType</b></span>",
    "title3": "Ստանալով տվյալների տեսակը",
    "text3": "Դուք կարող եք ստանալ ցանկացած օբյեկտի տվյալների տեսակը՝<br> օգտագործելով type() ֆունկցիան.<br>Օրինակ",
    "title4": "Տվյալների տիպի կարգավորում",
    "text4": "Python-ում տվյալների տեսակը սահմանվում է, երբ դուք արժեք եք վերագրում փոփոխականին.<br><br>x = 'Hello World' - str<br<x = 20 - int<br<x = 20.5 - float<br<x = 1j - complex<br<x = ['apple', 'banana', 'cherry'] - list<br<x = ('apple', 'banana', 'cherry') - tuple<br<x = range(6) - range<br<x = {'name' : 'John', 'age' : 36} - dict<br<x = {'apple', 'banana', 'cherry'} - set<br<x = frozenset({'apple', 'banana', 'cherry'}) - frozenset<br<x = True - bool<br<x = b'Hello' - bytes<br<x = bytearray(5) - bytearray<br<x = memoryview(bytes(5)) - memoryview<br<x = None - NoneType"
  },

  "python-numbers": {
    "title1": "Python թվեր (number)",
    "text1": "Python-ում թվերը լինում են 3 տեսակ՝<ul><li>int</li><li>float</li><li>complex</li></ul><br>Թվային տեսակների փոփոխականները ստեղծվում են, երբ դրանց արժեք եք վերագրում.<br>Օրինակ`<br><b>x = 1    # int<br>y = 2.8  # float<br>z = 1j   # complex</b><br>",
    "title2": "Int",
    "text2": "Int-ը ամբողջ թիվ է առանց տասնորդական մասի, կարող է լինել կամ դրական կամ բացասական, չունի երկարության սահմանափակում։<br>Օրինակ`<br><b>x = 1<br>y = 35656222554887711<br>z = -3255522</b>",
    "title3": "Float",
    "text3": "Fload թվերը ռացիոնալ թվերն են, որոնք պարունակում են տասնորդական թիվ, կարող են լինել կամ դրական կամ բացասական։<br>Օրինակ`<br><b>x = 1.10<br>y = 1.0<br>z = -35.59</b><br><br>float թվերը կարող են բաղկացած լինել նաև 'e' գիտական թվից<br>Օրինակ`<br><b>x = 35e3<br>y = 12E4<br>",
    "title4": "Complex",
    "text4": "Complex թվերը համարվում են բարդ թվեր, և գրվում են «j»-ով որպես երևակայական մաս.<br>Օրինակ`<br><b>x = 3+5j<br>y = 5j<br>z = -5j</b>",
    "title5": "Տիպի փոխակերպում",
    "text5": "Դուք կարող եք փոխարկել մի տեսակից մյուսը int(), float(), և complex() մեթոդներով.<br>Օրինակ՝<br><b>x = 1    # int<br>y = 2.8  # float<br>z = 1j   # complex<br><span style=\"color:red;\"><b> int to float</b></span><br>a = float(x)   -->  1.0 <br><span style=\"color:red;\"><b>float to int</b></span><br>b = int(y)   -->  2<br> <span style=\"color:red;\"><b>int to complex</b></span><br>c = complex(x)   -->  (1+0j)</b>"
  },

  "python-string": {
    "title1": "Python տող (string)",
    "text1": "Python տողերը շրջապատված են կամ մեկ չակերտներով, կամ կրկնակի չակերտներով:<br><span style='background-color:#b0e59b; padding:5px;'>'բարև'-ը նույնն է, ինչ \"բարև\"</span>:<br><br>Դուք կարող եք չակերտներ օգտագործել տողի ներսում, քանի դեռ դրանք չեն համընկնում տողի շրջապատող չակերտների հետ.<br>Օրինակ՝<br\"Բարև, իմ անունը 'Արմեն' է\"։",
    "title2": "Բազմատող տեքստեր",
    "text2": "Դուք կարող եք բազմատող տեքստ վերագրել փոփոխականին՝ օգտագործելով երեք չակերտ.<br>x = ' ' 'Համակարգիչն ամենահիանալի գործիքն է, որ ես երբևէ հանդիպել եմ: Այն մեր գիտակցության հեծանիվ է:' ' ' ",
    "title3": "Ինչպես աշխատել տողերի հետ",
    "text3": "Python-ը թույլ է տալիս աշխատել տողերի հետ, ինչպես այլ տվյալների տեսակների հետ.<br>Օրինակ՝ <br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>a = 'Hello, World!' <br> print(a[1])   -->  'e'</div><br>հաշվարկը սկսում ենք 0-ից <b>a = 'Hello, World!'</b> այս դեպքում եթե ցանկանում ենք տպել 'H' տառը պետք է գրել <b>print(a[0])</b><br><br>Եթե ​​ուզում եք տպել մի մասը տողից, կարող եք օգտագործել սլայսի միջոցով.<br>Օրինակ՝<br><b>b = 'Hello, World!'<br>print(b[2:5])   -->  'llo'</b>այս դեպքում տպում է 2, 3 և 4 տառերը, չի վերցնում 5-րդ տառը։<br><br>Կարող եք տպել տողի առաջին 5 տառերը կամ անտեսլով սկզբի 6 տառերը տպել մնացածը օգտագործելով [:5] կամ [7:].<br>Օրինակ՝<br><b>c = 'Hello, World!'<br>print(c[:5])   -->  'Hello'<br>print(c[7:])   -->  'World!'</b><br><br>",
    "title4": "Տողի հեռթականություն",
    "text4": "Տողի հետ աշխատելիս կարող ենք օգտագործել 'for' ֆունկցիան, որի միջոցով կարող ենք տպել տողի բոլոր տառերը.<br>Օրինակ՝<br><b>for x in 'Նարինջ':<br>  print(x)</b><br> <b>Նարինջ</b> տողը կտպի ամեն տառը մեկ տողում։<br><br>",
    "title5": "Տողի երկարություն",
    "text5": "Տողի երկարությունը իմանալու համար օգտագործում ենք len() ֆունկցիան.<br>Օրինակ՝<br><b>a = 'Hello, World!'<br>print(len(a))</b> այս դեպքում կտպի 13-ը, քանի որ տողը 13 սիմվոլ ունի։",
    "title6": "Տողի ստուգում",
    "text6": "Ստուգելու համար, արդյոք որոշակի արտահայտություն կամ նիշ առկա է տողում, մենք կարող ենք օգտագործել «in» հիմնաբառը:<br>Օրինակ՝<br><b>txt = 'The best things in life are free!'<br>print('free' in txt)   -->  True</b>",
    "title7": "Տողի ձևափոխություն (Modify Strings)",
    "text7": "Python-ն ունի մի շարք ներկառուցված մեթոդներ, որոնք կարող եք օգտագործել տողերի վրա:<br><br><span style=\"color:red;\"><b>Upper()</b></span><br>Տողը մեծատառով է վերադարձնում:<br>a = 'Hello, World!'<br>print(a.upper())   -->  'HELLO, WORLD!'<br><br><span style=\"color:red;\"><b>Lower()</b></span><br>Տողը փոքրատառով է վերադարձնում:<br>a = 'Hello, World!'<br>print(a.lower())   -->  'hello, world!'<br><br><span style=\"color:red;\"><b>Strip()</b></span><br>Մաքրում է սկզբի և վերջի բացատները:<br>a = ' Hello, World! '<br>print(a.strip())   -->  'Hello, World!'<br><br><span style=\"color:red;\"><b>Replace()</b></span><br>Փոխարինում է տողի մի մասը մյուսով:<br>a = 'Hello, World!'<br>print(a.replace('H', 'J'))   -->  'Jello, World!'<br><br><span style=\"color:red;\"><b>Split()</b></span><br>Տողը բաժանում է տառերի ցուցակի ընթացքում:<br>a = 'Hello, World!'<br>print(a.split(','))   -->  ['Hello', ' World!']<br><br><span style=\"color:red;\"><b>Format()</b></span><br>Տողը կարող է պահպանել տվյալները որպես տեքստ՝ օգտագործելով {} կամ {} փոփոխականները:<br>age = 36, name = 'Արմեն' <br>txt = 'Իմ անունը {} է, և ես {} տարեկան եմ'<br>print(txt.format(name, age))<br>այս դեպքում կտպի 'Իմ անունը Արմեն է, և ես 36 տարեկան եմ'<br><br>",
    "title8": "Տողի մեթոդներ (String Methods)",
    "text8": "Python-ն ունի մի շարք ներկառուցված մեթոդներ, որոնք կարող եք օգտագործել տողերի վրա:<br><span style=\"color:red;\"><b>Նշում. Բոլոր լարային մեթոդները վերադարձնում են նոր արժեքներ: Նրանք չեն փոխում բնօրինակ տողը:</b></span><br><br><b>Մեթոդ'           'նկարագրություն</b><br>capitalize()--->Տողի սկզբի տառը մեծատառով է վերադարձնում<br>casefold()--->  Տողը փոքրատառով է վերադարձնում<br>center()--->    Տողը կենտրոնական երկարությամբ է վերադարձնում<br>count()--->Տողի մեջ տառերի քանակը հաշվում է<br>encode()--->    Տողը կոդավորում է<br>endswith()--->  Տողը ավարտվում է նշված արժեքով<br>expandtabs()--->Տողի բոլոր տառերը վերադարձնում է ստորակետով<br>find()---> Տողի մեջ տառի առաջին հանգույցը վերադարձնում է<br>format()--->    Տողը ձևափոխում է տվյալների հետ<br>format_map()--->Տողը ձևափոխում է տվյալների հետ<br>index()--->Տողի մեջ տառի առաջին հանգույցը վերադարձնում է<br>isalnum()--->   Տողը պարունակում է միայն թվեր և տառեր<br>isalpha()--->   Տողը պարունակում է միայն տառեր<br>isdecimal()---> Տողը պարունակում է միայն թվեր<br>isdigit()--->   Տողը պարունակում է միայն թվեր<br>isidentifier()   Տողը պարունակում է անվանական տառեր<br>islower()--->   Տողը պարունակում է միայն փոքրատառեր<br>isnumeric()---> Տողը պարունակում է թվեր<br>isprintable()    Տողը կարող է տպվել<br>isspace()--->   Տողը պարունակում է բոլոր բացատները<br>istitle()--->   Տողը պարունակում է միայն վերնագիր տառեր<br>isupper()--->   Տողը պարունակում է միայն մեծատառեր<br>join()---> Տողի բոլոր տառերը միավորում է<br>ljust()--->Տողը ձախ կենտրոնական երկարությամբ է վերադարձնում<br>lower()--->Տողը փոքրատառով է վերադարձնում<br>lstrip()--->    Տողը ձախ բացատները մաքրում է<br>partition()---> Տողը բաժանում է երկարությամբ տառերի ցուցակի ընթացքում<br>replace()--->   Տողը փոխարինում է մի մասը մյուսով<br>rfind()--->Տողի մեջ տառի վերջին հանգույցը վերադարձնում է<br>rindex()--->    Տողի մեջ տառի վերջին հանգույցը վերադարձնում է<br>rjust()--->Տողը աջ կենտրոնական երկարությամբ է վերադարձնում<br>rpartition()--->Տողը բաժանում է երկարությամբ տառերի ցուցակի վերջում<br>rsplit()--->    Տողը բաժանում է տառերի ցուցակի վերջում<br>rstrip()--->    Տողը աջ բացատները մաքրում է<br>split()--->Տողը բաժանում է տառերի ցուցակի ընթացքում<br>splitlines()--->Տողը բաժանում է տողերի ընթացքում<br>startswith()--->Տողը սկսվում է նշված արժեքով<br>strip()--->Տողը բոլոր բացատները մաքրում է<br>swapcase()--->  Տողը փոխարինում է տառերի տեղերը<br>title()--->Տողը վերնագիր տառերով է վերադարձնում<br>translate()---> Տողը կոդավորում է<br>upper()--->Տողը մեծատառով է վերադարձնում<br>zfill()--->Տողը լրիվ է դարձնում նշված թվերով<br>"
  },

  "python-booleans": {
    "title1": "Բուլյան արժեքներ",
    "text1": "Բուլյանները ներկայացնում են երկու արժեքներից մեկը՝ <span style=\"color:red;\"><b>ճիշտ(True)</b></span> կամ <span style=\"color:red;\"><b>սխալ(False)</b></span>:<br><br>Ծրագրավորման մեջ հաճախ ձեզ կհանդիպեն արտահայտություններ է, ճիշտ(True) կամ սխալ(False):<br><br>Դուք կարող եք գնահատել ցանկացած արտահայտություն Python-ում և ստանալ երկու պատասխաններից մեկը՝ True կամ False:<br>",
    "title2": "Բուլյանների համեմատություն",
    "text2": "Երբ դուք համեմատում եք երկու արժեք, արտահայտությունը գնահատվում է, և Python-ը վերադարձնում է բուլյան պատասխանը.<br>Օրինակ՝<br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>print(10 > 9)   -->  True<br>print(10 == 9)   -->  False<br>print(10 < 9)   -->  False</div><br><br><br>Երբ դուք գործարկում եք պայման if-ի մեջ, Python-ը վերադարձնում է True կամ False:<br>Օրինակ`<br>Տպեք հաղորդագրություն՝ հիմնվելով պայմանի ճշմարիտ կամ սխալ լինելու վրա.<br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>a = 200<br>b = 33<br>if b > a:<br>  print('b-ն մեծ է a-ից')<br>else:<br>  print('b-ն փոքր է a-ից')</div><br><br>",
    "title3": "Գնահատեք արժեքները և փոփոխականները",
    "text3": "Bool() ֆունկցիան թույլ է տալիս գնահատել ցանկացած արժեք և դրա դիմաց տալ True կամ False․<br>Օրինակ՝<br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>print(bool('Hello'))   -->  True<br>print(bool(15))   -->  True</div><br><br>Ցանկացած արժեք, որը ոչ զրոյական է, կվերադարձնի True:<br>Օրինակ՝<br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>print(bool(''))   -->  False<br>print(bool(0))   -->  False</div><br><br>",
    "title4": "Բուլյան ֆունկցիաներ", 
    "text4": "Դուք կարող եք գործարկել կոդը՝ հիմնվելով ֆունկցիայի բուլյան պատասխանի վրա.<br><br>Օրինակ՝<br>Տպել «ԱՅՈ»: եթե ֆունկցիան վերադարձնում է True, հակառակ դեպքում տպեք «NO!»:<br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>def myFunction():<br>___return True<br>if myFunction():<br>___print('YES!')<br>else:<br>___print('NO!')</div><br>Այս դեպքում ֆունկցիան վերադարձնում է True, այսինքն կտպի «ԱՅՈ»:<br>"
  },

  "python-list": {
    "title1": "Ցուցակ/զանգված (List)",
    "text1": "Հայերենում List-ին ասում են և ցուցակ և զանգված, այս կայքում օգտագործված է ցուցակ բառը, եթե այլ տեղեր տեսնեք զանգված իմացեք խոսկը գնում է list-ի մասին<br><br>Ցուցակները օգտագործվում են մեկ փոփոխականում մի քանի տարրեր պահելու համար:<br><span style=\"color:red;\"><b>mylist = ['խնձոր', 'բանան', 'բալ']</b></span><br><br>Ցուցակի տարերը ինդեքսավովում են սկսած 0-ից<br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>mylist = ['խնձոր', 'բանան', 'բալ']<br>print(mylist[0]  -->  'խնձոր'</div",
    "title2": "Ցուցակի երկարություն",
    "text2": "Որոշելու համար, թե քանի տարր ունի ցուցակը, օգտագործեք len() ֆունկցիան.<br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>mylist = ['խնձոր', 'բանան', 'բալ']<br>print(len(mylist))  -->  3</div><br><br>",
    "title3": "Ցուցակների միջակայք",
    "text3": "Դուք կարող եք նշել ինդեքսների մի շարք՝ նշելով, թե որտեղից սկսել և որտեղ ավարտել տիրույթը:<br>Շրջանակ նշելիս վերադարձվող արժեքը կլինի նոր ցուցակ՝ նշված տարրերով:<br>Օրինակ՝<br><br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>mylist = ['խնձոր', 'բանան', 'նարինջ', 'կիվի', 'մանգո', 'բալ']<br>print(mylist[2:5])</div><br>Ձեր արդյունքը կլինի ['նարինջ', 'կիվի', 'մանգո']<br><br>Միջակայքը կարող եք վերցնել մինչև որևէ տարր կամ նշված տարրից սկսած<br>Օրինակ՝<br><br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>mylist = ['խնձոր', 'բանան', 'նարինջ', 'կիվի', 'մանգո', 'բալ']<br>print(mylist[:3]) -->['խնձոր', 'բանան', 'նարինջ']</div><br>print(mylist[2:]) -->['նարինջ', 'կիվի', 'մանգո', 'բալ']<br><br>",
    "title4": "Փոխել ցուցակի տարրերը", 
    "text4": "Որևէ ցուցակի արժեք փոխելու համար դիմեք ինդեքսի համարին.<br>Օրինակ՝<br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>mylist = ['խնձոր', 'բանան', 'բալ']<br>mylist[1] = 'նարինջ'<br>print(mylist)  -->  ['խնձոր', 'նարինջ', 'բալ']</div><br><br>",
    "title5": "Ավելացնել ցուցակի տարրերը",
    "text5": "Ցուցակի վերջում տարր ավելացնելու համար օգտագործեք append() մեթոդը.<br>Օրինակ՝<br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>mylist = ['խնձոր', 'բանան', 'բալ']<br>mylist.append('նարինջ')<br>print(mylist)  -->  ['խնձոր', 'բանան', 'բալ', 'նարինջ']</div><br><br>",
    "title6": "Ցուցակում տեղադրել տարր",
    "text6": "Ցուցակում նշված ինդեքսում տարր տեղադրելու համար օգտագործեք insert() մեթոդը.<br>Օրինակ՝<br> <div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>mylist = ['խնձոր', 'բանան', 'բալ']<br>mylist.insert(1, 'նարինջ')<br>print(mylist)  -->  ['խնձոր', 'նարինջ', 'բանան', 'բալ']</div><br><br>",
    "title7": "Հեռացնել ցուցակից տարրերը",
    "text7": "Ցուցակից տարր հեռացնելու համար օգտագործում ենք remove() մեթոդը.<br>Օրինակ՝<br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>mylist = ['խնձոր', 'բանան', 'բալ']<br>mylist.remove('բանան')<br>print(mylist)  -->  ['խնձոր', 'բալ']</div><br><br>Եթե ցուցակում նշված տարրի քանակը մեկից ավել է,<br>Օրինակ՝<br> mylist = ['բանան', 'խնձոր', 'բանան', 'բալ', 'բանան'] ապա հեռացնում է միայն առաջինը:<br><br>",
    "title8": "Ցուցակի տեսակավորում", 
    "text8": "Ցուցակի տարրերը դասակարգելու համար օգտագործում ենէ sort() մեթոդը․<br>Օրինակ`<br> mylist = ['բանան', 'խնձոր', 'բալ']<br>mylist.sort()<br> ապա դասակարգվում է այսպես` ['բալ', 'բանան', 'խնձոր']<br><br>Օրինակ`<br> mylist =  [100, 50, 65, 82, 23]<br>mylist.sort()<br> ապա դասակարգվում է այսպես` [23, 50, 65, 82, 100]<br><br>Օրինակ`<br> mylist =  [100, 50, 65, 82, 23]<br>mylist.sort(reverse = True)<br> ապա դասակարգվում է այսպես` [100, 82, 65, 50, 23]<br><br>"
  },

  
  "python-advanced": {
    "title": "Python python-advanced",
    "text": "Կայքը նախատեսված է հայերեն լեզվով ծրագրավորում սովորելու համար։"
  }
}



