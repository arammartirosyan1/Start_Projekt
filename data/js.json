{
    "footer": {
        "text": "Կայքը նախատեսված է հայերեն լեզվով տարբեր ծրագրավորման լեզուներ անվճար սովորելու համար։"
      },
    "js-intro": {
        "title1": "Ինչ է JavaScript-ը:",
        "text1": "<ul><li>JavaScript-ը աշխարհի ամենահայտնի ծրագրավորման լեզուն է:</li><li>JavaScript-ը համացանցի ծրագրավորման լեզուն է:</li><li>JavaScript-ը հեշտ է սովորել:</li><li>Այն կարող է թարմացնել և փոխել ինչպես HTML, այնպես էլ CSS:</li> <li>Այն կարող է հաշվարկել, շահարկել և վավերացնել տվյալները:</li> </ul>",
        "title2": "Ինչ կարող է անել JavaScript-ը:",
        "text2": "JavaScript-ը այն 3 լեզուներից մեկն է, որոնք բոլոր վեբ մշակողները պետք է սովորեն.<ol><li>HTML վեբ էջերի բովանդակությունը սահմանելու համար</li><li>CSS՝ վեբ էջերի դասավորությունը նշելու համար</li><li>JavaScript՝ վեբ էջերի վարքագիծը ծրագրավորելու համար</li></ol>",
        "title3": "Ինչու՞ JavaScript",
        "text3": "<ul><li>JavaScript-ը վեբ մշակման հիմնական լեզուն է:</li><li>JavaScript-ն ունի գրադարանների, շրջանակների և գործիքների ընդարձակ էկոհամակարգ:</li><li>JavaScript-ն աջակցվում է բոլոր ժամանակակից բրաուզերների կողմից:</li><li>JavaScript-ը հեշտ է սովորել:</li></ul>",
        "title4": "Ի՞նչ աշխատանքի կարելի է անցնել JavaScript-ի իմացությամբ",
        "text4": "<ul><li>Վեբ ծրագրավորող</li><li>Բջջային հավելվածների մշակող</li><li>JavaScript ծրագրավորող</li><li>Խաղի մշակող</li><li>Ավտոմատացման ինժեներ</li></ul>"
    },

    "js-install": {
        "title1": "JavaScript installation",
        "text1": "JavaScript-ը տեղադրելու համար ձեզ հարկավոր չէ որևէ բան առանձին տեղադրել, քանի որ JavaScript-ն աշխատում է բնօրինակ վեբ բրաուզերներում, ինչպիսիք են Chrome-ը, Firefox-ը, Edge-ը և Safari-ն:<br><br>Այնուամենայնիվ, եթե ցանկանում եք JavaScript-ը գործարկել բրաուզերից դուրս (օրինակ՝ backend-ի մշակման համար), պետք է տեղադրել Node.js-ը:",
        "title2": "Node.js- ներբեռնում",
        "text2": "Գնացեք Node.js պաշտոնական կայք<br>Ներբեռնեք LTS (Long Term Support) տարբերակը կայունության համար:<br>Տեղադրեք Node.js-ը<br>Գործարկեք տեղադրիչը և հետևեք տեղադրման քայլերին:<br><br<span style=\"color:red;\"><b>Եթե ​​ցանկանում եք JavaScript-ի գործարկման ժամանակ, բացի Node.js-ից, կարող եք օգտագործել Deno-ն (https://deno.land/):Տեղեկացրեք ինձ, եթե օգնության կարիք ունեք հատուկ JavaScript միջավայր ստեղծելու համար:</b></span><br><br><a href='https://arammartiro-start-proje-11.deno.dev/deno.html'>Deno-ի մասին ավելին</a>"
    }, 

    "js-writing-style" : {
        "title1": "Write JavaScript",
        "text1":  "<b>&lt;script&gt; </b><br> HTML-ում JavaScript կոդը տեղադրվում է &lt;script&gt; և &lt;/script&gt; թեգերի միջև<br>:<div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>&lt;script&gt;<br>document.getElementById('demo').innerHTML = 'Իմ առաջին JavaScript';<br>&lt;/script&gt;</div>",
        "title2": "JavaScript-ի գործառույթներ և իրադարձություններ",
        "text2": "JavaScript ֆունկցիան JavaScript կոդի բլոկ է, որը կարող է իրականացվել, երբ «կանչվում է»:<br><br>Օրինակ, ֆունկցիան կարող է կանչվել, երբ տեղի է ունենում իրադարձություն, օրինակ, երբ օգտատերը սեղմում է կոճակը:<br><br>Գործառույթների և իրադարձությունների մասին շատ ավելին կիմանաք հետագա գլուխներում:",
        "title3": "JavaScript &lt;head&gt կամ &lt;body&gt;-ում",
        "text3" : "Դուք կարող եք տեղադրել ցանկացած թվով սկրիպտներ HTML փաստաթղթում:<br>Սկրիպտները կարող են տեղադրվել &lt;body&gt;-ում կամ HTML էջի &lt;head&gt բաժնում կամ երկուսում:<br><br>Այս օրինակում JavaScript ֆունկցիան տեղադրված է HTML էջի &lt;head&gt բաժնում:<br>Ֆունկցիան կանչվում է (կանչվում), երբ կոճակը սեղմվում է.<br><br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;script&gt; function myFunction() { document.getElementById('demo').innerHTML = 'Paragraph changed.'; } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;Demo JavaScript in Head&lt;/h2&gt; &lt;p id='demo'&gt;A Paragraph&lt;/p&gt; &lt;button type='button' onclick='myFunction()'&gt;Try it&lt;/button&gt; &lt;/body&gt; &lt;/html&gt;</div>"
    },
    
    "js-output" : {
        "title1": "JavaScript Output",
        "text1": "JavaScript-ը կարող է «ցուցադրել» տվյալները տարբեր ձևերով.<ul><li>Գրել HTML տարրի մեջ՝ օգտագործելով<span style=\"color:red;\">innerHTML</span>:</li><li>Գրել HTML ելքի մեջ՝ օգտագործելով<span style=\"color:red;\">document.write()</span>:</li><li>Գրել նախազգուշացման վանդակում՝ օգտագործելով<span style=\"color:red;\">window.alert()</span>:</li><li>Բրաուզերի վահանակի մեջ գրելը` օգտագործելով<span style=\"color:red;\">console.log()</span>:</li></ul>",
        "title2": "Օգտագործելով ներքին HTML",
        "text2": "HTML տարր մուտք գործելու համար JavaScript-ը կարող է օգտագործել document.getElementById(id) մեթոդը:<br><br>ID հատկանիշը սահմանում է HTML տարրը: Ներքին HTML հատկությունը սահմանում է HTML բովանդակությունը.<br><br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;body&gt; &lt;h1&gt;My First Web Page&lt;/h1&gt; &lt;p&gt;My First Paragraph&lt;/p&gt; &lt;p id='demo'&gt;&lt;/p&gt;  &lt;script&gt; document.getElementById('demo').innerHTML = 5 + 6; &lt;/script&gt;  &lt;/body&gt; &lt;/html&gt;</div>"
    },

    "js-syntax" : {
        "title1": "JavaScript Syntax",
        "text1": "JavaScript կոդը կարող է գրվել մի քանի տարբեր ձևերով:<ul><li>Պարզ ստորակետով</li><li>Պարզ անկյունագծով</li><li>Պարզ անկյունագծով</li><li>Պարզ անկյունագծով</li></ul>",
        "title2": "JavaScript Ստորակետներ",
         "text2": "JavaScript հրամանները կարող են գրվել մի քանի տողում:<br><br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>var x = 5; var y = 6; var z = x + y;</div>",
        "title3": "JavaScript Անկյունագծեր",
        "text3": "JavaScript հրամանները կարող են գրվել մի քանի տողում:<br><br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>var x = 5; var y = 6; var z = x + y;</div>",
        "title4": "JavaScript Անկյունագծեր",
        "text4": "JavaScript հրամանները կարող են գրվել մի քանի տողում:<br><br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>var x = 5; var y = 6; var z = x + y;</div>"        
    },

    "js-variables" : {
        "title1": "JavaScript Variables",
        "text1": "JavaScript փոփոխականները կարող են պահպանել տվյալները:<ul><li>Անունը պետք է սկսվի տառով (կարող եք օգտագործել տառեր, թվեր, գծային նշաններ և գծային նշաններ):</li><li>Անունը չի կարող պահպանել բացատանիշները:</li><li>Անունը չի կարող պահպանել բացատանիշները:</li><li>Անունը չի կարող պահպանել բացատանիշները:</li></ul>",
        "title2": "Փոփոխականների սահմանում",
        "text2": "JavaScript փոփոխականը սահմանվում է հետևյալ մեթոդով:<br><br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>var carName;</div><br><br><span style=\"color:red;\"><b>Ծրագրավորման լավ պրակտիկա է համարվում օգտագործելուց առաջ փոփոխականները միշտ հայտարարելը:</b></span><br><br><ul><li>x-ը պահպանում է 5 արժեքը</li><li>y-ը պահպանում է 6 արժեքը</li><li>z-ն պահպանում է 11 արժեքը</li></ul><br<br><span style=\"color:red;\"><b>Var հիմնաբառը օգտագործվել է JavaScript-ի բոլոր կոդերում 1995-ից 2015 թվականներին:<br><br>Let և const հիմնաբառերն ավելացվել են JavaScript-ին 2015թ.<br><br>Var հիմնաբառը պետք է օգտագործվի միայն հին բրաուզերների համար գրված կոդում:</b></span>",
        "title3": "JavaScript Տիպեր",
        "text3": "JavaScript-ը անունները չեն պահպանում տիպը:<br>JavaScript-ը ավելի շատ է անունների տիպական լեզվում:<br>JavaScript-ը կարող է անունների տիպական լեզվում:<br>JavaScript-ը կարող է անունների տիպական լեզվում:"
    },

    "js-let" : {
        "title1": "JavaScript Let",
        "text1": "<div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>Let հիմնաբառը ներդրվել է ES6-ում (2015)<br><br>Փոփոխականները հայտարարագրված են let have Block Scope-ով<br><br>Let-ով հայտարարված փոփոխականները պետք է հայտարարվեն նախքան օգտագործումը<br><br>Let-ով հայտարարված փոփոխականները չեն կարող վերահայտարարվել նույն տիրույթում</div>",
        "title2": "Արգելափակման շրջանակը",
        "text2": "Արգելափակման շրջանակը<br>Մինչև ES6-ը (2015), JavaScript-ը չուներ Block Scope:<br><br>JavaScript-ն ուներ Global Scope և Function Scope:<br><br>ES6-ը ներկայացրեց երկու նոր JavaScript հիմնաբառեր՝ let և const:<br><br>Այս երկու հիմնաբառերը JavaScript-ում տրամադրեցին Block Scope.<br><br>Օրինակ<br>{ } բլոկի ներսում հայտարարված փոփոխականները չեն կարող մուտք գործել բլոկի դրսից.<br><br>{<br> թող x = 2;<br>}<br>// x-ն այստեղ ՉԻ կարող օգտագործվել",
        "title3": "Գլոբալ շրջանակը",
        "text3" : "Var-ով հայտարարված փոփոխականները միշտ ունեն Գլոբալ շրջանակ:<br><br>Var բանալի բառով հայտարարված փոփոխականները ՉԻ կարող ունենալ արգելափակման շրջանակ.<br><br>Օրինակ<br> Varinside a { } բլոկով հայտարարված փոփոխականներին կարելի է մուտք գործել բլոկի դրսից՝<br><br><div style='background-color:#b0e59b; padding:5px; display:inline-block; width:50%;'>{<br> var x = 2;<br>}<br>// x այստեղ կարող է օգտագործվել</div>"
    },

    "js-let-and-const": {
        "title1" : "Ինչը լավ է",
        "text1" : "Let and const ունեն բլոկի շրջանակ:<br><br>Let-ը և const-ը չեն կարող վերահայտարարվել:<br><br>Let-ը և const-ը պետք է հայտարարվեն մինչև օգտագործելը:<br><br>Let and const-ը սրա հետ չի կապում:<br><br>Let and const չեն բարձրացվում:<br><br>",
        "title2" : "Ինչը լավ չէ",
        "text2" : "var-ը պարտադիր չէ, որ հայտարարվի:<br><br>var-ը բարձրանում է.<br><br>var կապում է սրա հետ:",
        "title3" : "Բրաուզերի աջակցություն",
        "text3" : "Let և const հիմնաբառերը չեն աջակցվում Internet Explorer 11-ում կամ ավելի վաղ:"
    }


}












